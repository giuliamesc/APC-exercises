// Price deviation evaluation v1

#include<iostream>
#include<iomanip>

#define MAXDIM 100

using std::cout;
using std::cin;
using std::endl;
using std::setw;


int main (void)
{
    unsigned cont=0;
    double sum=0;
    double prices[MAXDIM]={};
    double deviations[MAXDIM]={};

    while (cin && cont<MAXDIM) {
        int price;
        cout << "Input prices" << endl;
        cin >> price;
        prices[cont]=price;
        sum += price;
        cont++;
    }
    cout << "The sum is " << sum << endl;

    if (cont!= 0)
    {
       double mean = sum/cont;
       cout << "The mean is " << mean << endl;

       cout << endl << setw(20) << "Prices" << setw(40) << "Deviation from the mean" << endl;

       for (unsigned i = 0; i < cont-1; ++i)
       {
           deviations[i]=prices[i]-mean;
           cout << setw(20) << prices[i] << setw(40) << deviations[i] << endl;
        }
    }

    return 0;

}
